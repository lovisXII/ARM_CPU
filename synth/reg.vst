--
-- Generated by VASY
--
ENTITY reg IS
PORT(
  wdata1	: IN BIT_VECTOR(31 DOWNTO 0);
  wadr1	: IN BIT_VECTOR(3 DOWNTO 0);
  wen1	: IN BIT;
  wdata2	: IN BIT_VECTOR(31 DOWNTO 0);
  wadr2	: IN BIT_VECTOR(3 DOWNTO 0);
  wen2	: IN BIT;
  wcry	: IN BIT;
  wzero	: IN BIT;
  wneg	: IN BIT;
  wovr	: IN BIT;
  cspr_wb	: IN BIT;
  reg_rd1	: OUT BIT_VECTOR(31 DOWNTO 0);
  radr1	: IN BIT_VECTOR(3 DOWNTO 0);
  reg_v1	: OUT BIT;
  reg_rd2	: OUT BIT_VECTOR(31 DOWNTO 0);
  radr2	: IN BIT_VECTOR(3 DOWNTO 0);
  reg_v2	: OUT BIT;
  reg_rd3	: OUT BIT_VECTOR(31 DOWNTO 0);
  radr3	: IN BIT_VECTOR(3 DOWNTO 0);
  reg_v3	: OUT BIT;
  reg_rd4	: OUT BIT_VECTOR(4 DOWNTO 0);
  radr4	: IN BIT_VECTOR(3 DOWNTO 0);
  reg_v4	: OUT BIT;
  reg_cry	: OUT BIT;
  reg_zero	: OUT BIT;
  reg_neg	: OUT BIT;
  reg_cznv	: OUT BIT;
  reg_ovr	: OUT BIT;
  reg_vv	: OUT BIT;
  inval_adr1	: IN BIT_VECTOR(3 DOWNTO 0);
  inval1	: IN BIT;
  inval_adr2	: IN BIT_VECTOR(3 DOWNTO 0);
  inval2	: IN BIT;
  inval_czn	: IN BIT;
  inval_ovr	: IN BIT;
  reg_pc	: OUT BIT_VECTOR(31 DOWNTO 0);
  reg_pcv	: OUT BIT;
  inc_pc	: IN BIT;
  ck	: IN BIT;
  reset_n	: IN BIT;
  vdd	: IN BIT;
  vss	: IN BIT
);
END reg;

ARCHITECTURE VST OF reg IS

  SIGNAL wadr1_oh	: BIT_VECTOR(15 DOWNTO 0);
  SIGNAL wadr2_oh	: BIT_VECTOR(15 DOWNTO 0);
  SIGNAL inval_adr1_oh	: BIT_VECTOR(15 DOWNTO 0);
  SIGNAL inval_adr2_oh	: BIT_VECTOR(15 DOWNTO 0);
  COMPONENT reg_model
  PORT(
  wdata1	: IN BIT_VECTOR(31 DOWNTO 0);
  wdata2	: IN BIT_VECTOR(31 DOWNTO 0);
  wcry	: IN BIT;
  wzero	: IN BIT;
  wneg	: IN BIT;
  wovr	: IN BIT;
  cspr_wb	: IN BIT;
  reg_rd1	: OUT BIT_VECTOR(31 DOWNTO 0);
  radr1	: IN BIT_VECTOR(3 DOWNTO 0);
  reg_v1	: OUT BIT;
  reg_rd2	: OUT BIT_VECTOR(31 DOWNTO 0);
  radr2	: IN BIT_VECTOR(3 DOWNTO 0);
  reg_v2	: OUT BIT;
  reg_rd3	: OUT BIT_VECTOR(31 DOWNTO 0);
  radr3	: IN BIT_VECTOR(3 DOWNTO 0);
  reg_v3	: OUT BIT;
  reg_rd4	: OUT BIT_VECTOR(4 DOWNTO 0);
  radr4	: IN BIT_VECTOR(3 DOWNTO 0);
  reg_v4	: OUT BIT;
  reg_cry	: OUT BIT;
  reg_zero	: OUT BIT;
  reg_neg	: OUT BIT;
  reg_cznv	: OUT BIT;
  reg_ovr	: OUT BIT;
  reg_vv	: OUT BIT;
  inval_czn	: IN BIT;
  inval_ovr	: IN BIT;
  reg_pc	: OUT BIT_VECTOR(31 DOWNTO 0);
  reg_pcv	: OUT BIT;
  inc_pc	: IN BIT;
  ck	: IN BIT;
  reset_n	: IN BIT;
  vdd	: IN BIT;
  vss	: IN BIT;
  inval_adr2_oh	: IN BIT_VECTOR(15 DOWNTO 0);
  inval_adr1_oh	: IN BIT_VECTOR(15 DOWNTO 0);
  wadr2_oh	: IN BIT_VECTOR(15 DOWNTO 0);
  wadr1_oh	: IN BIT_VECTOR(15 DOWNTO 0)
  );
  END COMPONENT;

  COMPONENT one_hot
  PORT(
  vss	: IN BIT;
  vdd	: IN BIT;
  adr	: IN BIT_VECTOR(3 DOWNTO 0);
  en	: IN BIT;
  adr_oh	: OUT BIT_VECTOR(15 DOWNTO 0)
  );
  END COMPONENT;

BEGIN

  reg_inst : reg_model
  PORT MAP (
    wdata1 => wdata1,
    wdata2 => wdata2,
    wcry => wcry,
    wzero => wzero,
    wneg => wneg,
    wovr => wovr,
    cspr_wb => cspr_wb,
    reg_rd1 => reg_rd1,
    radr1 => radr1,
    reg_v1 => reg_v1,
    reg_rd2 => reg_rd2,
    radr2 => radr2,
    reg_v2 => reg_v2,
    reg_rd3 => reg_rd3,
    radr3 => radr3,
    reg_v3 => reg_v3,
    reg_rd4 => reg_rd4,
    radr4 => radr4,
    reg_v4 => reg_v4,
    reg_cry => reg_cry,
    reg_zero => reg_zero,
    reg_neg => reg_neg,
    reg_cznv => reg_cznv,
    reg_ovr => reg_ovr,
    reg_vv => reg_vv,
    inval_czn => inval_czn,
    inval_ovr => inval_ovr,
    reg_pc => reg_pc,
    reg_pcv => reg_pcv,
    inc_pc => inc_pc,
    ck => ck,
    reset_n => reset_n,
    vdd => vdd,
    vss => vss,
    inval_adr2_oh => inval_adr2_oh,
    inval_adr1_oh => inval_adr1_oh,
    wadr2_oh => wadr2_oh,
    wadr1_oh => wadr1_oh
  );
  inval_wadr2_oh_map : one_hot
  PORT MAP (
    adr(3 downto 0) => inval_adr2,
    adr_oh(15 downto 0) => inval_adr2_oh,
    en => inval2,
    vdd => vdd,
    vss => vss
  );
  inval_wadr1_oh_map : one_hot
  PORT MAP (
    adr(3 downto 0) => inval_adr1,
    adr_oh(15 downto 0) => inval_adr1_oh,
    en => inval1,
    vdd => vdd,
    vss => vss
  );
  wadr2_oh_map : one_hot
  PORT MAP (
    adr(3 downto 0) => wadr2,
    adr_oh(15 downto 0) => wadr2_oh,
    en => wen2,
    vdd => vdd,
    vss => vss
  );
  wadr1_oh_map : one_hot
  PORT MAP (
    adr(3 downto 0) => wadr1,
    adr_oh(15 downto 0) => wadr1_oh,
    en => wen1,
    vdd => vdd,
    vss => vss
  );
END VST;
